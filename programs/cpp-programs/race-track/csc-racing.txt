// Camryn Poole
// CSC 210
// CSC Racing!
// December 4, 2022

// Inheritance
For any race, there is a set of predefined properties which are commons to all cars in the race and a set of properties specific to a particular car in the race. All cars need to have a racetrack to race on, therefore , the Racetrack class is declared first (base class). All the properties of Racetrack class will be common among the cars. Then the Car class is declared and is the derived class. By doing this, having to set the race track for each car can be avoided. 

// Encapsulation
The Car class has defined attributes like id, maximum speed, and velocities that can be initialized by creating an object of the car class. However, it is unsafe to allow anyone/anything to change to properties of the car class, then the attributes will lose the information initially initialized with. To avoid this, the properties are enclosed inside the member functions. These functions get and set the attributes. This restricts unnecessary changes while still having complete control over the value of the attribute.

// Abstraction
The user is interested in seeing the cars race and not interested in learning how the cars are actually racing. Abstract is representing the essence of the program without concerning about the background details. This reduces complexity for the user and increases the security of the program as only the important details are provided to the user. 

// Design Flaws
1. Incorporating namespaces in headers
This means anyone who uses the header will be forced to use the namespace i have specified, which is undesirable. This also increases the chance of naming collissions. This can be fixed by avoiding using any namespace declarations in header files unless absolutely necessary. If namespaces are used, use the fully qualified names in the header files.
2. Logic flaws
There are mistakes in the logic regarding the implementation of the code. This is a result of not fully understanding the problem. 
3. Semantic erros
Semantic errors occur when the statements written in the program are not meaningful to the compiler. AKA the code doesnt do anything.

// Interests
I enjoyed learning about the algorithms because they are challenging. It is enjoyable when i find something new to learn. 
Memory allocation was also a very interesting topic, i realized how much computer architecture and programming go hand-in-hand. 


